var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.499,1,0.848]],["body/components/AppComponent.html",[0,0.902,1,1.477,2,0.683,3,0.566,4,1.855,5,1.855,6,1.855,7,0.459,8,2.25,9,1.855,10,2.96,11,1.88,12,2.419,13,2.419,14,3.717,15,2.419,16,3.717,17,0.814,18,2.035,19,4.383,20,1.728,21,0.961,22,0.062,23,1.129,24,1.129,25,2.4,26,1.129,27,2.85,28,0.683,29,0.683,30,0.566,31,0.361,32,1.129,33,2.419,34,2.035,35,2.419,36,2.853,37,1.855,38,1.728,39,1.855,40,0.961,41,1.855,42,0.814,43,1.855,44,1.855,45,0.046,46,0.046]],["title/injectables/AppConstants.html",[47,0.996,48,0.996]],["body/injectables/AppConstants.html",[2,0.799,3,0.662,7,0.537,17,0.952,18,2.248,20,1.909,21,1.124,22,0.062,23,1.321,24,1.321,26,1.321,28,0.799,29,0.799,30,0.662,31,0.422,45,0.05,46,0.05,47,1.762,48,1.626,49,2.634,50,2.436,51,4.643,52,4.106,53,4.106,54,4.106,55,4.106,56,4.106,57,3.335]],["title/modules/AppModule.html",[58,0.603,59,1.377]],["body/modules/AppModule.html",[1,1.658,2,0.631,3,0.523,7,0.424,11,1.043,22,0.063,28,1.149,29,0.631,30,0.7,31,0.334,32,1.043,45,0.043,46,0.043,48,1.806,58,0.846,59,2.71,60,1.224,61,2.59,62,2.59,63,2.59,64,2.08,65,2.08,66,2.08,67,2.08,68,2.08,69,2.12,70,2.12,71,2.297,72,1.715,73,1.442,74,2.634,75,3.528,76,1.715,77,1.442,78,2.297,79,2.634,80,2.08,81,2.634,82,2.634,83,3.528,84,2.08]],["title/classes/AppPage.html",[31,0.319,85,1.638]],["body/classes/AppPage.html",[2,0.802,3,0.664,7,0.539,12,2.179,17,0.956,22,0.063,26,1.63,28,0.802,30,0.664,31,0.521,34,1.833,45,0.051,46,0.051,77,1.833,85,2.679,86,2.643,87,2.253,88,4.649,89,4.649,90,3.347,91,2.545,92,3.347,93,2.643,94,3.347,95,3.347,96,3.347]],["title/modules/AppRoutingModule.html",[58,0.603,69,1.169]],["body/modules/AppRoutingModule.html",[0,0.66,2,0.797,3,0.66,7,0.535,22,0.063,28,1.112,29,0.797,30,0.813,31,0.421,42,1.17,45,0.05,46,0.05,58,0.797,69,1.905,78,2.667,97,3.324,98,3.324,99,2.432,100,4.097,101,2.624,102,3.324,103,1.82,104,2.624,105,2.624,106,3.324,107,3.324]],["title/components/WeatherChartComponent.html",[0,0.499,40,0.848]],["body/components/WeatherChartComponent.html",[0,0.71,1,0.404,2,0.287,3,0.238,4,0.78,5,0.78,6,0.78,7,0.193,9,0.78,10,2.056,11,1.251,13,1.275,15,1.275,17,0.342,18,1.072,20,1.662,21,1.422,22,0.064,23,1.251,24,1.251,25,2.453,26,1.61,28,0.469,29,0.287,30,0.238,31,0.515,32,0.775,33,1.275,34,1.072,35,1.275,36,1.866,37,0.78,38,0.91,39,0.78,40,1.444,41,0.78,42,0.342,43,0.78,44,0.78,45,0.024,46,0.024,50,1.856,87,1.359,91,1.072,108,2.7,109,2.7,110,0.947,111,1.958,112,2.482,113,2.31,114,1.958,115,1.958,116,3.158,117,3.158,118,3.428,119,3.158,120,3.158,121,3.158,122,3.158,123,3.158,124,3.158,125,2.494,126,2.676,127,2.056,128,1.616,129,1.958,130,2.7,131,1.199,132,1.199,133,1.199,134,1.96,135,1.958,136,2.866,137,1.958,138,3.389,139,2.263,140,1.199,141,1.199,142,1.199,143,2.494,144,1.199,145,1.958,146,1.546,147,1.199,148,1.199,149,0.947,150,0.656,151,2.173,152,3.047,153,2.584,154,1.616,155,2.263,156,2.206,157,0.947,158,1.958,159,1.546,160,0.78,161,1.199,162,1.96,163,1.958,164,1.546,165,0.947,166,1.199,167,1.546,168,0.947,169,1.199,170,1.199,171,1.199,172,1.96,173,1.199,174,1.199,175,1.199,176,1.199,177,1.199,178,1.958,179,0.947,180,1.199,181,1.958,182,1.958,183,1.199,184,1.199,185,1.199,186,1.199,187,1.199,188,1.199,189,1.199,190,1.958,191,1.958,192,1.958,193,1.546]],["title/components/WeatherHomeComponent.html",[0,0.499,42,0.718]],["body/components/WeatherHomeComponent.html",[0,0.677,1,0.362,2,0.258,3,0.213,4,0.7,5,0.7,6,0.7,7,0.173,9,0.7,10,1.939,11,1.179,13,1.165,15,1.165,17,0.657,18,0.98,20,1.902,21,1.204,22,0.064,23,1.179,24,1.75,25,2.396,26,1.468,28,0.551,29,0.258,30,0.213,31,0.452,32,0.426,33,1.165,34,0.98,35,1.165,36,2.555,37,0.7,38,1.246,39,0.7,40,0.362,41,0.7,42,1.121,43,1.497,44,0.7,45,0.022,46,0.022,50,2.396,87,1.468,91,1.468,103,2.094,105,0.849,108,2.489,113,0.98,125,0.849,126,2.539,127,1.165,128,0.7,130,2.324,134,1.816,149,1.816,150,0.589,151,1.866,152,2.539,153,2.324,154,1.165,155,1.414,156,1.165,157,1.816,159,0.849,160,1.746,162,1.816,165,0.849,167,1.414,179,1.414,194,0.849,195,1.79,196,1.79,197,3.409,198,2.682,199,2.978,200,2.978,201,2.978,202,1.79,203,2.978,204,1.075,205,1.468,206,1.79,207,1.414,208,1.414,209,1.79,210,1.075,211,1.79,212,1.075,213,1.075,214,1.414,215,2.682,216,1.79,217,1.79,218,2.682,219,2.682,220,1.414,221,1.79,222,1.075,223,1.075,224,1.075,225,1.075,226,1.075,227,1.075,228,1.79,229,1.79,230,1.79,231,1.79,232,1.79,233,2.682,234,1.79,235,3.215,236,1.075,237,4.162,238,2.682,239,2.682,240,2.682,241,1.075,242,1.79,243,2.682,244,1.79,245,1.79,246,2.682,247,1.075,248,1.075,249,2.3,250,1.414,251,1.075,252,1.075,253,0.849,254,1.075,255,0.849,256,1.075,257,1.075,258,1.075,259,1.075,260,1.075,261,1.075,262,1.075,263,1.075,264,1.075,265,0.849,266,1.075,267,1.075,268,1.79,269,1.075,270,1.075,271,1.075,272,1.79,273,2.3,274,1.075,275,1.414,276,1.075,277,1.075,278,1.79,279,1.79,280,1.79,281,1.79,282,1.79,283,1.79]],["title/modules/WeatherModule.html",[58,0.603,70,1.169]],["body/modules/WeatherModule.html",[2,0.576,3,0.477,7,0.387,22,0.063,25,1.816,28,1.162,29,0.576,30,0.753,31,0.305,32,0.952,40,1.496,42,1.267,45,0.041,46,0.041,58,0.795,60,1.118,61,2.471,62,1.566,63,1.566,70,2.154,71,2.159,72,1.566,73,1.317,76,1.566,78,2.159,103,1.317,104,1.899,109,1.566,113,1.317,150,1.317,284,1.899,285,1.899,286,2.405,287,3.316,288,2.405,289,3.316,290,1.899,291,3.316,292,1.899,293,3.796,294,1.899,295,1.899,296,3.316,297,3.316,298,1.899,299,3.796,300,2.405,301,3.796,302,3.796,303,3.796,304,3.796,305,3.796,306,3.796,307,3.796,308,3.796,309,3.796,310,2.619,311,3.796,312,1.899,313,2.405]],["title/injectables/WeatherService.html",[47,0.996,205,1.377]],["body/injectables/WeatherService.html",[2,0.379,3,0.314,7,0.255,11,0.627,12,1.03,17,0.452,20,2.006,21,1.221,22,0.064,23,0.627,24,0.627,26,1.327,28,0.868,29,0.379,30,0.314,31,0.424,38,1.914,45,0.049,46,0.03,47,1.181,48,1.327,50,2.095,80,1.25,84,1.25,87,2.363,91,2.472,118,1.25,127,2.357,128,1.03,130,2.182,146,3.408,151,1.632,153,2.491,154,2.491,156,2.491,193,3.252,205,1.982,207,2.859,208,2.646,250,3.149,253,1.25,255,3.149,314,1.25,315,2.981,316,2.981,317,2.981,318,1.583,319,3.351,320,2.981,321,1.583,322,2.442,323,2.442,324,1.583,325,2.981,326,2.981,327,2.442,328,1.583,329,3.351,330,3.621,331,3.826,332,2.442,333,3.621,334,1.583,335,3.351,336,2.442,337,1.583,338,2.442,339,4.226,340,1.928,341,1.25,342,1.583,343,1.583,344,1.583,345,1.583,346,1.583,347,1.583,348,3.621,349,1.583,350,1.583,351,1.583,352,1.583,353,2.442,354,1.583,355,1.583,356,2.442,357,1.583,358,1.583,359,2.442,360,1.583,361,1.583,362,1.583,363,1.583,364,1.583,365,1.583,366,1.583,367,1.583,368,1.583,369,1.583,370,1.583,371,1.583,372,1.25,373,1.583,374,1.583]],["title/coverage.html",[375,2.701]],["body/coverage.html",[0,0.848,1,1.029,7,0.492,8,2.411,21,1.029,22,0.062,31,0.387,40,1.029,42,0.872,45,0.048,46,0.048,47,1.539,48,1.209,49,2.411,85,1.988,86,2.411,103,1.672,108,2.53,109,1.988,110,2.411,194,2.411,205,1.672,265,3.923,314,2.411,375,2.411,376,3.054,377,3.054,378,3.054,379,3.054,380,3.886,381,3.054,382,3.054,383,3.054,384,2.411,385,2.929,386,3.068,387,4.499,388,2.411,389,3.068,390,2.411,391,2.411,392,2.411,393,3.054,394,3.054]],["title/dependencies.html",[60,1.405,151,1.154]],["body/dependencies.html",[22,0.064,29,0.739,45,0.048,46,0.048,60,1.433,76,2.545,77,2.141,101,2.435,113,1.688,150,2.141,290,2.435,292,2.435,294,2.435,295,2.435,298,2.435,310,3.087,312,2.435,341,2.435,395,3.084,396,4.515,397,3.084,398,4.939,399,3.084,400,3.084,401,3.084,402,3.084,403,3.084,404,3.084,405,3.084,406,3.084,407,3.084,408,3.084,409,3.084,410,3.084,411,3.084,412,3.084,413,3.084,414,3.084]],["title/index.html",[17,0.602,214,1.664,415,2.108]],["body/index.html",[0,0.824,3,0.571,7,0.463,11,1.139,22,0.046,38,1.337,45,0.046,46,0.046,73,1.575,93,2.271,164,2.271,168,3.28,220,3.473,340,2.952,372,3.757,392,2.271,416,2.876,417,3.739,418,4.399,419,4.154,420,4.154,421,2.876,422,2.876,423,2.876,424,4.758,425,2.876,426,2.876,427,2.876,428,2.876,429,2.876,430,2.876,431,2.876,432,2.876,433,2.876,434,2.876,435,4.559,436,2.876,437,2.876,438,2.876,439,2.876,440,2.876,441,2.271,442,3.739,443,4.559,444,3.739,445,3.739,446,2.876,447,2.876,448,2.876,449,4.154,450,2.876,451,2.876,452,2.876,453,2.876]],["title/modules.html",[58,0.82]],["body/modules.html",[22,0.054,45,0.054,46,0.054,58,0.902,59,2.06,69,1.749,70,1.749,77,2.417,172,2.971,454,4.415,455,4.415,456,4.686,457,3.763]],["title/overview.html",[458,2.701]],["body/overview.html",[0,0.606,1,1.626,22,0.061,30,0.606,31,0.387,32,1.209,40,1.441,42,1.22,45,0.048,46,0.048,47,1.209,48,1.692,58,0.931,59,2.738,60,1.419,61,1.988,62,1.988,63,1.988,64,2.411,65,2.411,66,2.411,67,2.411,68,2.411,69,1.987,70,2.243,71,2.53,72,1.988,73,1.672,99,1.672,275,3.068,284,2.411,285,2.411,458,2.411,459,3.886,460,3.054]],["title/routes.html",[99,1.873]],["body/routes.html",[22,0.056,45,0.056,46,0.056,99,2.182]],["title/miscellaneous/variables.html",[385,1.968,461,1.664]],["body/miscellaneous/variables.html",[17,0.936,21,1.488,22,0.062,23,1.748,24,1.748,45,0.05,46,0.05,139,2.588,143,3.207,160,3.004,384,2.588,385,2.133,386,3.817,388,2.588,389,2.588,390,3.486,391,3.486,441,3.207,461,2.588,462,4.062,463,3.277,464,3.277,465,3.277,466,3.277]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":265,"title":{},"body":{"components/WeatherHomeComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":275,"title":{},"body":{"components/WeatherHomeComponent.html":{},"overview.html":{}}}],["1).format(\"mmm",{"_index":185,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["1.4.4",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":274,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["12",{"_index":272,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["2",{"_index":460,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["2.7.3",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["2.amazonaws.com/interview",{"_index":54,"title":{},"body":{"injectables/AppConstants.html":{}}}],["2018",{"_index":223,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["3",{"_index":459,"title":{},"body":{"overview.html":{}}}],["6",{"_index":224,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["6.3.3",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["7.0.6",{"_index":422,"title":{},"body":{"index.html":{}}}],["7.1.0",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["_appconst",{"_index":320,"title":{},"body":{"injectables/WeatherService.html":{}}}],["_http",{"_index":322,"title":{},"body":{"injectables/WeatherService.html":{}}}],["_moment",{"_index":149,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["_moment().subtract(2",{"_index":229,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["_weatherservic",{"_index":209,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["actual_compon",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["adapt",{"_index":312,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular",{"_index":419,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":292,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":294,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":298,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":310,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/material/datepick",{"_index":300,"title":{},"body":{"modules/WeatherModule.html":{}}}],["angular/platform",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":101,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":347,"title":{},"body":{"injectables/WeatherService.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["app.compon",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.const",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconst",{"_index":48,"title":{"injectables/AppConstants.html":{}},"body":{"injectables/AppConstants.html":{},"modules/AppModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":59,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":85,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":69,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":130,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["artifact",{"_index":436,"title":{},"body":{"index.html":{}}}],["automat",{"_index":429,"title":{},"body":{"index.html":{}}}],["avail",{"_index":172,"title":{},"body":{"components/WeatherChartComponent.html":{},"modules.html":{}}}],["bar",{"_index":135,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["basi",{"_index":171,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["beta.19",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":364,"title":{},"body":{"injectables/WeatherService.html":{}}}],["bodi",{"_index":353,"title":{},"body":{"injectables/WeatherService.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["bootstrap",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["bound",{"_index":251,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["brows",{"_index":456,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":94,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":288,"title":{},"body":{"modules/WeatherModule.html":{}}}],["browseranimationsmodul",{"_index":287,"title":{},"body":{"modules/WeatherModule.html":{}}}],["browsermodul",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":435,"title":{},"body":{"index.html":{}}}],["call",{"_index":175,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["catcherror",{"_index":343,"title":{},"body":{"injectables/WeatherService.html":{}}}],["catcherror(this.handleerror('getdatabymetricloc",{"_index":352,"title":{},"body":{"injectables/WeatherService.html":{}}}],["chang",{"_index":431,"title":{},"body":{"index.html":{}}}],["chart",{"_index":113,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["chart'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["chart.compon",{"_index":313,"title":{},"body":{"modules/WeatherModule.html":{}}}],["chart.component.html",{"_index":115,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.scss",{"_index":114,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.t",{"_index":110,"title":{},"body":{"components/WeatherChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:17",{"_index":131,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:25",{"_index":132,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:33",{"_index":147,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:44",{"_index":142,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:52",{"_index":148,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:60",{"_index":144,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:68",{"_index":141,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:76",{"_index":140,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:84",{"_index":129,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.component.ts:95",{"_index":133,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chart.j",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["chart/weath",{"_index":109,"title":{},"body":{"components/WeatherChartComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{}}}],["chartdata",{"_index":126,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["chartloc",{"_index":197,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["chartmetr",{"_index":198,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["chartsmodul",{"_index":289,"title":{},"body":{"modules/WeatherModule.html":{}}}],["charttyp",{"_index":191,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["charttypesarray",{"_index":116,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["check",{"_index":452,"title":{},"body":{"index.html":{}}}],["choos",{"_index":190,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["chosen",{"_index":329,"title":{},"body":{"injectables/WeatherService.html":{}}}],["class",{"_index":31,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":420,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":284,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":285,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":432,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":291,"title":{},"body":{"modules/WeatherModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["configur",{"_index":161,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["consol",{"_index":362,"title":{},"body":{"injectables/WeatherService.html":{}}}],["console.error(error",{"_index":361,"title":{},"body":{"injectables/WeatherService.html":{}}}],["console.log(`${oper",{"_index":368,"title":{},"body":{"injectables/WeatherService.html":{}}}],["const",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WeatherHomeComponent.html":{}}}],["constructor",{"_index":128,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(_http",{"_index":318,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(_weatherservic",{"_index":204,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["constructor(priv",{"_index":253,"title":{},"body":{"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["consumpt",{"_index":367,"title":{},"body":{"injectables/WeatherService.html":{}}}],["contain",{"_index":155,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["context",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":375,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d",{"_index":219,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["data",{"_index":156,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["data/metoffic",{"_index":56,"title":{},"body":{"injectables/AppConstants.html":{}}}],["date",{"_index":215,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["dates.push([i",{"_index":276,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["declar",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["default",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"classes/AppPage.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["depend",{"_index":60,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":153,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["desir",{"_index":346,"title":{},"body":{"injectables/WeatherService.html":{}}}],["dev",{"_index":426,"title":{},"body":{"index.html":{}}}],["develop",{"_index":423,"title":{},"body":{"index.html":{}}}],["developer_board",{"_index":278,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["direct",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":434,"title":{},"body":{"index.html":{}}}],["directori",{"_index":439,"title":{},"body":{"index.html":{}}}],["dist",{"_index":438,"title":{},"body":{"index.html":{}}}],["document",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["dynam",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":447,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":86,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":92,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":90,"title":{},"body":{"classes/AppPage.html":{}}}],["eg",{"_index":222,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["element",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["element(by.css('app",{"_index":95,"title":{},"body":{"classes/AppPage.html":{}}}],["empti",{"_index":373,"title":{},"body":{"injectables/WeatherService.html":{}}}],["end",{"_index":220,"title":{},"body":{"components/WeatherHomeComponent.html":{},"index.html":{}}}],["enddat",{"_index":211,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["enddate.split",{"_index":267,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["endyear",{"_index":270,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["england",{"_index":238,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["environ",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":339,"title":{},"body":{"injectables/WeatherService.html":{}}}],["error.messag",{"_index":370,"title":{},"body":{"injectables/WeatherService.html":{}}}],["execut",{"_index":444,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["extractdata",{"_index":315,"title":{},"body":{"injectables/WeatherService.html":{}}}],["extractdata(r",{"_index":323,"title":{},"body":{"injectables/WeatherService.html":{}}}],["fail",{"_index":369,"title":{},"body":{"injectables/WeatherService.html":{}}}],["fals",{"_index":139,"title":{},"body":{"components/WeatherChartComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["filtereddata",{"_index":264,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["flag",{"_index":164,"title":{},"body":{"components/WeatherChartComponent.html":{},"index.html":{}}}],["flexlayoutmodul",{"_index":293,"title":{},"body":{"modules/WeatherModule.html":{}}}],["form",{"_index":249,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["format",{"_index":216,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["formsmodul",{"_index":296,"title":{},"body":{"modules/WeatherModule.html":{}}}],["fromdat",{"_index":228,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["further",{"_index":448,"title":{},"body":{"index.html":{}}}],["gener",{"_index":418,"title":{},"body":{"index.html":{}}}],["get",{"_index":415,"title":{"index.html":{}},"body":{}}],["getallmonthsbetweentwod",{"_index":202,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["getallmonthsbetweentwodates(startd",{"_index":210,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["getdatabymetricloc",{"_index":316,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getdatabymetriclocation(metr",{"_index":327,"title":{},"body":{"injectables/WeatherService.html":{}}}],["gettitletext",{"_index":88,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":451,"title":{},"body":{"index.html":{}}}],["graph",{"_index":457,"title":{},"body":{"modules.html":{}}}],["h1')).gettext",{"_index":96,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":317,"title":{},"body":{"injectables/WeatherService.html":{}}}],["handleerror(oper",{"_index":332,"title":{},"body":{"injectables/WeatherService.html":{}}}],["help",{"_index":449,"title":{},"body":{"index.html":{}}}],["hide",{"_index":170,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["hold",{"_index":162,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["home",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["home.compon",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["home.component.html",{"_index":196,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.scss",{"_index":195,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.t",{"_index":194,"title":{},"body":{"components/WeatherHomeComponent.html":{},"coverage.html":{}}}],["home.component.ts:113",{"_index":212,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.ts:19",{"_index":247,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.ts:31",{"_index":241,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.ts:44",{"_index":236,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.ts:57",{"_index":226,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.ts:65",{"_index":227,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.ts:73",{"_index":206,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home.component.ts:86",{"_index":225,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["home/weath",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{}}}],["hook",{"_index":174,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["html",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["http://localhost:4200",{"_index":428,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":319,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["https://s3.eu",{"_index":52,"title":{},"body":{"injectables/AppConstants.html":{}}}],["human",{"_index":354,"title":{},"body":{"injectables/WeatherService.html":{}}}],["identifi",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":111,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"classes/AppPage.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["infrastructur",{"_index":360,"title":{},"body":{"injectables/WeatherService.html":{}}}],["inject",{"_index":47,"title":{"injectables/AppConstants.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/AppConstants.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":125,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["inputobj",{"_index":199,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["instead",{"_index":363,"title":{},"body":{"injectables/WeatherService.html":{}}}],["isdataavail",{"_index":117,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["j",{"_index":273,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["job",{"_index":365,"title":{},"body":{"injectables/WeatherService.html":{}}}],["js",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":154,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["json').pip",{"_index":350,"title":{},"body":{"injectables/WeatherService.html":{}}}],["karma",{"_index":446,"title":{},"body":{"index.html":{}}}],["keep",{"_index":371,"title":{},"body":{"injectables/WeatherService.html":{}}}],["key",{"_index":237,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["label",{"_index":163,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["labelsarr",{"_index":182,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["labelsarr.push(_moment().month(obj['month",{"_index":184,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["layout",{"_index":295,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["legend",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["lifecycl",{"_index":173,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["line",{"_index":136,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["locat",{"_index":250,"title":{},"body":{"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["location.key",{"_index":282,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["locationsarray",{"_index":200,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["log",{"_index":359,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map",{"_index":342,"title":{},"body":{"injectables/WeatherService.html":{}}}],["map(this.extractdata",{"_index":351,"title":{},"body":{"injectables/WeatherService.html":{}}}],["matbuttonmodul",{"_index":301,"title":{},"body":{"modules/WeatherModule.html":{}}}],["matcardmodul",{"_index":302,"title":{},"body":{"modules/WeatherModule.html":{}}}],["match",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodul",{"_index":299,"title":{},"body":{"modules/WeatherModule.html":{}}}],["matformfieldmodul",{"_index":303,"title":{},"body":{"modules/WeatherModule.html":{}}}],["maticonmodul",{"_index":304,"title":{},"body":{"modules/WeatherModule.html":{}}}],["matinputmodul",{"_index":305,"title":{},"body":{"modules/WeatherModule.html":{}}}],["matmomentdatemodul",{"_index":311,"title":{},"body":{"modules/WeatherModule.html":{}}}],["matprogressspinnermodul",{"_index":308,"title":{},"body":{"modules/WeatherModule.html":{}}}],["matradiomodul",{"_index":306,"title":{},"body":{"modules/WeatherModule.html":{}}}],["matselectmodul",{"_index":307,"title":{},"body":{"modules/WeatherModule.html":{}}}],["mattoolbarmodul",{"_index":309,"title":{},"body":{"modules/WeatherModule.html":{}}}],["max",{"_index":242,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["member",{"_index":152,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["method",{"_index":87,"title":{},"body":{"classes/AppPage.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["metric",{"_index":127,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["metric.key",{"_index":281,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["metricsarray",{"_index":201,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["min",{"_index":244,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["miscellan",{"_index":461,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":218,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["modul",{"_index":58,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":150,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["month",{"_index":221,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["month].join",{"_index":277,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["monthsbetweenarray",{"_index":259,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["more",{"_index":450,"title":{},"body":{"index.html":{}}}],["multiline_chart",{"_index":280,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navig",{"_index":427,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":89,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":392,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":424,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":290,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":124,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["obj['year",{"_index":186,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["object",{"_index":160,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":331,"title":{},"body":{"injectables/WeatherService.html":{}}}],["of(result",{"_index":374,"title":{},"body":{"injectables/WeatherService.html":{}}}],["onchang",{"_index":112,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["onsubmit",{"_index":203,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["oper",{"_index":335,"title":{},"body":{"injectables/WeatherService.html":{}}}],["option",{"_index":208,"title":{},"body":{"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["out",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":458,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":151,"title":{"dependencies.html":{}},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["param",{"_index":348,"title":{},"body":{"injectables/WeatherService.html":{}}}],["paramet",{"_index":207,"title":{},"body":{"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["parent",{"_index":158,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["parseint(end[0",{"_index":271,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["parseint(start[0",{"_index":269,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["path",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["privat",{"_index":118,"title":{},"body":{"components/WeatherChartComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":440,"title":{},"body":{"index.html":{}}}],["product",{"_index":441,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":417,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["protractor",{"_index":93,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["providedin",{"_index":345,"title":{},"body":{"injectables/WeatherService.html":{}}}],["public",{"_index":50,"title":{},"body":{"injectables/AppConstants.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["question",{"_index":55,"title":{},"body":{"injectables/AppConstants.html":{}}}],["radar",{"_index":137,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["rainfal",{"_index":246,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["re",{"_index":325,"title":{},"body":{"injectables/WeatherService.html":{}}}],["reactiveformsmodul",{"_index":297,"title":{},"body":{"modules/WeatherModule.html":{}}}],["readabl",{"_index":355,"title":{},"body":{"injectables/WeatherService.html":{}}}],["readm",{"_index":453,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":326,"title":{},"body":{"injectables/WeatherService.html":{}}}],["reload",{"_index":430,"title":{},"body":{"index.html":{}}}],["remot",{"_index":358,"title":{},"body":{"injectables/WeatherService.html":{}}}],["request",{"_index":193,"title":{},"body":{"components/WeatherChartComponent.html":{},"injectables/WeatherService.html":{}}}],["requir",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resourc",{"_index":336,"title":{},"body":{"injectables/WeatherService.html":{}}}],["respons",{"_index":146,"title":{},"body":{"components/WeatherChartComponent.html":{},"injectables/WeatherService.html":{}}}],["result",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":91,"title":{},"body":{"classes/AppPage.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/WeatherService.html":{}}}],["root'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["rout",{"_index":99,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routermodul",{"_index":100,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":98,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":372,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["rxj",{"_index":341,"title":{},"body":{"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":344,"title":{},"body":{"injectables/WeatherService.html":{}}}],["scaffold",{"_index":433,"title":{},"body":{"index.html":{}}}],["scaleshowverticallin",{"_index":145,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["scotland",{"_index":239,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["select",{"_index":159,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["selectedloc",{"_index":234,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["selectedmetr",{"_index":232,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["send",{"_index":357,"title":{},"body":{"injectables/WeatherService.html":{}}}],["sent",{"_index":157,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["serv",{"_index":425,"title":{},"body":{"index.html":{}}}],["server",{"_index":340,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["serverurl",{"_index":51,"title":{},"body":{"injectables/AppConstants.html":{}}}],["servic",{"_index":255,"title":{},"body":{"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["set",{"_index":165,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["show",{"_index":169,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["shown",{"_index":167,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["sorri",{"_index":192,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["spec\\.t",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":97,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.constants.t",{"_index":49,"title":{},"body":{"injectables/AppConstants.html":{},"coverage.html":{}}}],["src/app/app.constants.ts:5",{"_index":57,"title":{},"body":{"injectables/AppConstants.html":{}}}],["src/app/app.module.t",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/services/weather.servic",{"_index":248,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["src/app/services/weather.service.t",{"_index":314,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/services/weather.service.ts:11",{"_index":321,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:24",{"_index":328,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:39",{"_index":324,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:53",{"_index":334,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weath",{"_index":108,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":286,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/environments/environment.prod.t",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":214,"title":{"index.html":{}},"body":{"components/WeatherHomeComponent.html":{}}}],["startdat",{"_index":213,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["startdate.split",{"_index":266,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["startyear",{"_index":268,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["statement",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["statist",{"_index":279,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["store",{"_index":437,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["submit",{"_index":283,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["support",{"_index":454,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":455,"title":{},"body":{"modules.html":{}}}],["t",{"_index":333,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tabl",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["temperatur",{"_index":243,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["test",{"_index":443,"title":{},"body":{"index.html":{}}}],["this._http.get(this._appconstants.serverurl",{"_index":349,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this._weatherservice.getdatabymetriclocation(this.inputobj.selectedmetr",{"_index":262,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["this.chartdata",{"_index":256,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["this.chartdata.foreach((obj",{"_index":183,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["this.chartdata.length",{"_index":177,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["this.chartloc",{"_index":258,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["this.chartmetr",{"_index":257,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["this.getallmonthsbetweentwodates(this.inputobj.fromdate.format('yyyi",{"_index":260,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["this.inputobj.selectedlocation).subscribe((r",{"_index":263,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["this.inputobj.todate.format('yyyi",{"_index":261,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["this.isdataavail",{"_index":180,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["this.metr",{"_index":178,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["this.onsubmit",{"_index":254,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["this.xchartdata",{"_index":189,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["this.xchartlabel",{"_index":188,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["tmax",{"_index":233,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["tmin",{"_index":245,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["todat",{"_index":231,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["todo",{"_index":356,"title":{},"body":{"injectables/WeatherService.html":{}}}],["toolbar",{"_index":252,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["transform",{"_index":366,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["true",{"_index":143,"title":{},"body":{"components/WeatherChartComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uk",{"_index":235,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["undefin",{"_index":179,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["unit",{"_index":442,"title":{},"body":{"index.html":{}}}],["updat",{"_index":176,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["us",{"_index":168,"title":{},"body":{"components/WeatherChartComponent.html":{},"index.html":{}}}],["user",{"_index":330,"title":{},"body":{"injectables/WeatherService.html":{}}}],["usual",{"_index":338,"title":{},"body":{"injectables/WeatherService.html":{}}}],["valu",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConstants.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["valuesarr",{"_index":181,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["valuesarr.push(obj['valu",{"_index":187,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["var",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["variabl",{"_index":385,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":421,"title":{},"body":{"index.html":{}}}],["via",{"_index":445,"title":{},"body":{"index.html":{}}}],["void",{"_index":134,"title":{},"body":{"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{}}}],["wale",{"_index":240,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["weather",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{}}}],["weather/weath",{"_index":102,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["weather/weather.modul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["weatherapp",{"_index":416,"title":{},"body":{"index.html":{}}}],["weatherchartcompon",{"_index":40,"title":{"components/WeatherChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{}}}],["weatherhomecompon",{"_index":42,"title":{"components/WeatherHomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/WeatherChartComponent.html":{},"components/WeatherHomeComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{}}}],["weathermodul",{"_index":70,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":205,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherHomeComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["west",{"_index":53,"title":{},"body":{"injectables/AppConstants.html":{}}}],["whether",{"_index":166,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["xchartdata",{"_index":119,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["xchartlabel",{"_index":120,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["xchartlegend",{"_index":121,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["xchartopt",{"_index":122,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["xcharttyp",{"_index":123,"title":{},"body":{"components/WeatherChartComponent.html":{}}}],["ye",{"_index":337,"title":{},"body":{"injectables/WeatherService.html":{}}}],["year",{"_index":230,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["yyyi",{"_index":217,"title":{},"body":{"components/WeatherHomeComponent.html":{}}}],["zone.j",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'weather-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'weather-app';\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherChartComponent', 'selector': 'app-weather-chart'},{'name': 'WeatherHomeComponent', 'selector': 'app-weather-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConstants.html":{"url":"injectables/AppConstants.html","title":"injectable - AppConstants","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.constants.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                serverUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://s3.eu-west-2.amazonaws.com/interview-question-data/metoffice/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.constants.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AppConstants {\n    public serverUrl = 'https://s3.eu-west-2.amazonaws.com/interview-question-data/metoffice/';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\nAppConstants\n\nAppConstants\n\nAppModule -->\n\nAppConstants->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AppConstants\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppConstants } from './app.constants';\nimport { AppRoutingModule } from './app-routing.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    HttpClientModule,\n    WeatherModule\n  ],\n  providers: [AppConstants],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitleText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitleText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherHomeComponent } from './weather/weather-home/weather-home.component';\n\nconst routes: Routes = [\n  { path: '', component: WeatherHomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherChartComponent.html":{"url":"components/WeatherChartComponent.html","title":"component - WeatherChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-chart/weather-chart.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-chart\n            \n\n            \n                styleUrls\n                weather-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-chart.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartTypesArray\n                            \n                            \n                                    Public\n                                isDataAvailable\n                            \n                            \n                                    Private\n                                xChartData\n                            \n                            \n                                    Private\n                                xChartLabels\n                            \n                            \n                                    Private\n                                xChartLegend\n                            \n                            \n                                    Private\n                                xChartOptions\n                            \n                            \n                                    Private\n                                xChartType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartData\n                            \n                            \n                                metric\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-chart/weather-chart.component.ts:84\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chartData\n                    \n                    \n                            \n                            Type :    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        metric\n                    \n                    \n                            \n                            Type :    String\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartTypesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartTypesArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['bar', 'line', 'radar']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDataAvailable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            xChartData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xChartData:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            xChartLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xChartLabels:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            xChartLegend\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xChartLegend:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            xChartOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xChartOptions:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    scaleShowVerticalLines: false,\n    responsive: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            xChartType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xChartType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'line'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-chart/weather-chart.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport * as _moment from 'moment';\n\n@Component({\n  selector: 'app-weather-chart',\n  templateUrl: './weather-chart.component.html',\n  styleUrls: ['./weather-chart.component.scss']\n})\nexport class WeatherChartComponent implements OnChanges {\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member chartData\n   * @description A JSON array containing the chart data sent by the parent component\n   */\n  @Input() chartData: Array;\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member chartData\n   * @description A string containing the metric selected from the parent component\n   */\n  @Input() metric: String;\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member xChartOptions\n   * @description A JSON object containing the chart configurations\n   */\n  private xChartOptions: any = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member xChartLabels\n   * @description An array to hold the labels for the chart\n   */\n  private xChartLabels: Array;\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member xChartType\n   * @description A string to hold the chart type\n   */\n  private xChartType: string = 'line';\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member xChartLegend\n   * @description A flag to set whether the chart legends to be shown or not\n   */\n  private xChartLegend: boolean = true;\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member xChartData\n   * @description A JSON array to hold the chart data to be used by the chart\n   */\n  private xChartData: Array;\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member isDataAvailable\n   * @description A flag to show/ hide the chart on the basis of data availability\n   */\n  public isDataAvailable: boolean = false;\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @member chartTypesArray\n   * @description An array containing all the chart types to be shown for selection\n   */\n  public chartTypesArray = ['bar', 'line', 'radar'];\n\n  constructor() { }\n\n  /**\n   * @package Weather\n   * @class WeatherChartComponent\n   * @method ngOnChanges\n   * @description A lifecycle hook called on updation of chartData & metric\n   * @returns void\n   */\n  ngOnChanges() {\n    if (this.chartData.length && this.metric != undefined) {\n      this.isDataAvailable = true;\n    }\n    let valuesArr = [], labelsArr = [];\n    this.chartData.forEach((obj) => {\n      labelsArr.push(_moment().month(obj['month'] - 1).format(\"MMM\") + '\\' ' + obj['year']);\n      valuesArr.push(obj['value']);\n    });\n    this.xChartLabels = labelsArr;\n    this.xChartData = [\n      { data: valuesArr, label: this.metric }\n    ];\n  }\n}\n\n    \n\n    \n        \n  \n    Choose a chart type - \n    \n      \n        {{chartType}}\n      \n    \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n  \n    Sorry, there is no data available for your request!\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose a chart type -                   {{chartType}}                                                  Sorry, there is no data available for your request!  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherChartComponent', 'selector': 'app-weather-chart'},{'name': 'WeatherHomeComponent', 'selector': 'app-weather-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherHomeComponent.html":{"url":"components/WeatherHomeComponent.html","title":"component - WeatherHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-home/weather-home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-home\n            \n\n            \n                styleUrls\n                weather-home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartData\n                            \n                            \n                                    Public\n                                chartLocation\n                            \n                            \n                                    Public\n                                chartMetric\n                            \n                            \n                                    Public\n                                inputObj\n                            \n                            \n                                    Public\n                                locationsArray\n                            \n                            \n                                    Public\n                                metricsArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllMonthsBetweenTwoDates\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_weatherService: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-home/weather-home.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllMonthsBetweenTwoDates\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllMonthsBetweenTwoDates(startDate: String, endDate: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-home/weather-home.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                A start date in this format YYYY-MM-d\n\n                                                        \n                                                \n                                                \n                                                        endDate\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                A end date in this format YYYY-MM-d\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    A String array with months, eg. 2018-6\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-home/weather-home.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartData:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-home/weather-home.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartLocation:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-home/weather-home.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartMetric\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartMetric:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-home/weather-home.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    fromDate: _moment().subtract(2, 'years'),\n    toDate: _moment(),\n    selectedMetric: 'Tmax',\n    selectedLocation: 'UK'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-home/weather-home.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locationsArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        locationsArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { key: 'UK', value: 'UK' },\n    { key: 'England', value: 'England' },\n    { key: 'Scotland', value: 'Scotland' },\n    { key: 'Wales', value: 'Wales' }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-home/weather-home.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metricsArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        metricsArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { key: 'Max Temperature', value: 'Tmax' },\n    { key: 'Min Temperature', value: 'Tmin' },\n    { key: 'Rainfall', value: 'Rainfall' }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-home/weather-home.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport * as _moment from 'moment';\n\nimport { WeatherService } from 'src/app/services/weather.service';\n\n@Component({\n  selector: 'app-weather-home',\n  templateUrl: './weather-home.component.html',\n  styleUrls: ['./weather-home.component.scss']\n})\nexport class WeatherHomeComponent {\n\n  /**\n   * @package Weather\n   * @class WeatherHomeComponent\n   * @member metricsArray\n   * @description A JSON array containing all the metrics shown in the form\n   */\n  public metricsArray = [\n    { key: 'Max Temperature', value: 'Tmax' },\n    { key: 'Min Temperature', value: 'Tmin' },\n    { key: 'Rainfall', value: 'Rainfall' }\n  ];\n\n  /**\n   * @package Weather\n   * @class WeatherHomeComponent\n   * @member locationsArray\n   * @description A JSON array containing all the locations shown in the form\n   */\n  public locationsArray = [\n    { key: 'UK', value: 'UK' },\n    { key: 'England', value: 'England' },\n    { key: 'Scotland', value: 'Scotland' },\n    { key: 'Wales', value: 'Wales' }\n  ];\n\n  /**\n   * @package Weather\n   * @class WeatherHomeComponent\n   * @member inputObj\n   * @description An object bound to the form; sets default input values\n   */\n  public inputObj = {\n    fromDate: _moment().subtract(2, 'years'),\n    toDate: _moment(),\n    selectedMetric: 'Tmax',\n    selectedLocation: 'UK'\n  }\n\n  /**\n   * @package Weather\n   * @class WeatherHomeComponent\n   * @member chartData\n   * @description An array of objects to hold the data to be sent to chart component\n   */\n  public chartData: Array = [];\n\n  /**\n   * @package Weather\n   * @class WeatherHomeComponent\n   * @member chartLocation\n   * @description A string to hold the location to be sent to the toolbar\n   */\n  public chartLocation: String;\n\n  /**\n   * @package Weather\n   * @class WeatherHomeComponent\n   * @member chartData\n   * @description A string to hold the selected metric to be sent to chart component\n   */\n  public chartMetric: String;\n\n  constructor(private _weatherService: WeatherService) {\n    this.onSubmit();\n  }\n\n  /**\n   * @package Weather\n   * @class WeatherHomeComponent\n   * @method onSubmit\n   * @description A method to get weather data from the service\n   * @returns void\n   */\n  onSubmit() {\n    this.chartData = [], this.chartMetric = undefined, this.chartLocation = undefined;\n\n    const monthsBetweenArray = this.getAllMonthsBetweenTwoDates(this.inputObj.fromDate.format('YYYY-MM-d'), this.inputObj.toDate.format('YYYY-MM-d'));\n\n    this._weatherService.getDataByMetricLocation(this.inputObj.selectedMetric, this.inputObj.selectedLocation).subscribe((res) => {\n      let filteredData = [];\n      for (let index = 0; index  {\n    var start = startDate.split('-');\n    var end = endDate.split('-');\n    var startYear = parseInt(start[0]);\n    var endYear = parseInt(end[0]);\n    var dates = [];\n\n    for (var i = startYear; i  12 ? j % 12 || 11 : j + 1) {\n        var month = j + 1;\n        dates.push([i, month].join('-'));\n      }\n    }\n    return dates;\n  }\n}\n\n    \n\n    \n        \n  \n    developer_board\n    Weather Statistics : {{ chartLocation }}\n    \n    multiline_chart\n  \n\n\n  \n  \n    \n      \n        \n          \n            --\n            \n              {{metric.key}}\n            \n          \n        \n\n        \n          \n            --\n            \n              {{location.key}}\n            \n          \n        \n\n        \n          \n          \n          \n        \n\n        \n          \n          \n          \n        \n\n        Submit\n      \n\n      \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      developer_board    Weather Statistics : {{ chartLocation }}        multiline_chart                                              --                          {{metric.key}}                                                            --                          {{location.key}}                                                                                                                                  Submit                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherChartComponent', 'selector': 'app-weather-chart'},{'name': 'WeatherHomeComponent', 'selector': 'app-weather-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\n\nWeatherChartComponent\n\nWeatherChartComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherChartComponent->WeatherModule\n\n\n\n\n\nWeatherHomeComponent\n\nWeatherHomeComponent\n\nWeatherModule -->\n\nWeatherHomeComponent->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherChartComponent\n                            \n                            \n                                WeatherHomeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ChartsModule } from 'ng2-charts';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatButtonModule, MatCardModule, MatFormFieldModule, MatIconModule, MatInputModule, MatRadioModule, MatSelectModule, MatProgressSpinnerModule, MatToolbarModule } from '@angular/material';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { WeatherHomeComponent } from './weather-home/weather-home.component';\nimport { WeatherChartComponent } from './weather-chart/weather-chart.component';\n\n@NgModule({\n  declarations: [\n    WeatherHomeComponent,\n    WeatherChartComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    ChartsModule,\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatMomentDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    FlexLayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatMomentDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractData\n                            \n                            \n                                getDataByMetricLocation\n                            \n                            \n                                    Public\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, _appConstants: AppConstants)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _appConstants\n                                                  \n                                                        \n                                                                    AppConstants\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            extractData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractData(res: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/weather.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                JSON/ String response received from the requesting service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    A JSON array with requested data\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDataByMetricLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDataByMetricLocation(metric: String, location: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/weather.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        metric\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                a metric name chosen by the user\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                a location name chosen by the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    A JSON array with requested data\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(operation: string, result?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/weather.service.ts:53\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        operation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'operation'\n                                                        \n\n                                                        \n                                                                service method that requested a resource\n\n                                                        \n                                                \n                                                \n                                                        result\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                usually an error response from a server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (error: any) => any\n\n                            \n                                \n                                    An observable of error response\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { AppConstants } from '../app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private _http: HttpClient, private _appConstants: AppConstants) { }\n\n  /**\n   * @package Services\n   * @class WeatherService\n   * @method getDataByMetricLocation\n   * @description A method to get data from the desired API\n   * @param metric a metric name chosen by the user\n   * @param location a location name chosen by the user\n   * @returns A JSON array with requested data\n   */\n  getDataByMetricLocation(metric: String, location: String): Observable {\n    return this._http.get(this._appConstants.serverUrl + metric + '-' + location + '.json').pipe(\n      map(this.extractData),\n      catchError(this.handleError('getDataByMetricLocation'))\n    );\n  }\n\n  /**\n   * @package Services\n   * @class WeatherService\n   * @method extractData\n   * @description A method to return data from the response received\n   * @param res JSON/ String response received from the requesting service\n   * @returns A JSON array with requested data\n   */\n  public extractData(res: Response): any {\n    let body = res;\n    return body || [];\n  }\n\n  /**\n   * @package Services\n   * @class WeatherService\n   * @method handleError\n   * @description A method to return human readable errors\n   * @param operation service method that requested a resource\n   * @param result usually an error response from a server\n   * @returns An observable of error response\n   */\n  public handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            \n                injectable\n            \n            \n                AppConstants\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/weather/weather-chart/weather-chart.component.ts\n            \n            \n                component\n            \n            \n                WeatherChartComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/weather/weather-home/weather-home.component.ts\n            \n            \n                component\n            \n            \n                WeatherHomeComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.1.0\n        \n            @angular/cdk : ^7.1.0\n        \n            @angular/common : ~7.0.0\n        \n            @angular/compiler : ~7.0.0\n        \n            @angular/core : ~7.0.0\n        \n            @angular/flex-layout : ^7.0.0-beta.19\n        \n            @angular/forms : ~7.0.0\n        \n            @angular/http : ~7.0.0\n        \n            @angular/material : ^7.1.0\n        \n            @angular/material-moment-adapter : ^7.1.0\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ~7.0.0\n        \n            chart.js : ^2.7.3\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            moment : ^2.22.2\n        \n            ng2-charts : 1.4.4\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeatherApp\nThis project was generated with Angular CLI version 7.0.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\nAppConstants\n\nAppConstants\n\nAppModule -->\n\nAppConstants->AppModule\n\n\n\n\n\nWeatherChartComponent\n\nWeatherChartComponent\n\nWeatherModule -->\n\nWeatherChartComponent->WeatherModule\n\n\n\n\n\nWeatherHomeComponent\n\nWeatherHomeComponent\n\nWeatherModule -->\n\nWeatherHomeComponent->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        1 Route\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
